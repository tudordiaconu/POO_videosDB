Starting audit...
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Actor.java:16:18: Parameter actorInputData should be final. [FinalParameters]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Actor.java:23:5: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Actor.java:27:5: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Actor.java:27:25: Parameter name should be final. [FinalParameters]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Actor.java:31:5: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'getCareerDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'getCareerDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Actor.java:35:5: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'setCareerDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'setCareerDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Actor.java:35:38: Parameter careerDescription should be final. [FinalParameters]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Actor.java:39:5: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'getFilmography' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'getFilmography' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Actor.java:43:5: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'setFilmography' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'setFilmography' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Actor.java:43:32: Parameter filmography should be final. [FinalParameters]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Actor.java:47:5: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'getAwards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'getAwards' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Actor.java:51:5: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'setAwards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'setAwards' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Actor.java:51:27: Parameter awards should be final. [FinalParameters]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Actor.java:55:5: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Actor.java:57:25: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Actor.java:58:40: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Actor.java:59:68: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Actor.java:60:48: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Actor.java:61:38: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Command.java:12:20: Parameter actionInputData should be final. [FinalParameters]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Command.java:20:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'getActionId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'getActionId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Command.java:24:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'getActionType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'getActionType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Command.java:28:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'getType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'getType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Command.java:32:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'getUsername' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'getUsername' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Command.java:36:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'getTitle' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'getTitle' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Command.java:40:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Command.java:42:27: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Command.java:43:40: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Command.java:44:54: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Command.java:45:42: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Command.java:46:50: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Command.java:47:44: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Command.java:51:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Command.java:51:29: Parameter username should be final. [FinalParameters]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Command.java:51:46: Parameter title should be final. [FinalParameters]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Command.java:51:60: Parameter database should be final. [FinalParameters]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Database.java:3:14: Using the '.*' form of import should be avoided - fileio.*. [AvoidStarImport]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Database.java:17:18: Variable 'input' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Database.java:47:21: Parameter input should be final. [FinalParameters]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Database.java:59:5: Class 'Database' looks like designed for extension (can be subclassed), but the method 'command' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Database' final or making the method 'command' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Database.java:59:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Database.java:59:25: Parameter writer should be final. [FinalParameters]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Database.java:59:40: Parameter arrayResult should be final. [FinalParameters]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Database.java:64: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Database.java:64:107: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Database.java:65: Line is longer than 100 characters (found 109). [LineLength]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Database.java:65:109: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Database.java:73:5: Class 'Database' looks like designed for extension (can be subclassed), but the method 'getActorMap' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Database' final or making the method 'getActorMap' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Database.java:77:5: Class 'Database' looks like designed for extension (can be subclassed), but the method 'getMovieMap' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Database' final or making the method 'getMovieMap' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Database.java:81:5: Class 'Database' looks like designed for extension (can be subclassed), but the method 'getSerialMap' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Database' final or making the method 'getSerialMap' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Database.java:85:5: Class 'Database' looks like designed for extension (can be subclassed), but the method 'getUserMap' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Database' final or making the method 'getUserMap' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Movie.java:4:8: Unused import - fileio.ShowInput. [UnusedImports]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Movie.java:6:33: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Movie.java:8:18: Parameter movieInputData should be final. [FinalParameters]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Movie.java:13:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Movie.java:17:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Serial.java:8:34: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Serial.java:11:19: Parameter serialInputData should be final. [FinalParameters]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Serial.java:17:5: Class 'Serial' looks like designed for extension (can be subclassed), but the method 'getNumberOfSeasons' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Serial' final or making the method 'getNumberOfSeasons' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Serial.java:21:5: Class 'Serial' looks like designed for extension (can be subclassed), but the method 'getSeasons' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Serial' final or making the method 'getSeasons' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Serial.java:25:5: Class 'Serial' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Serial' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\User.java:14:17: Parameter userInputData should be final. [FinalParameters]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\User.java:21:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getUsername' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getUsername' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\User.java:25:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getSubscriptionType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getSubscriptionType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\User.java:29:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getHistory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getHistory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\User.java:33:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getFavoriteMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getFavoriteMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\User.java:37:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\User.java:39:24: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\User.java:40:48: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\User.java:41:66: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\User.java:42:40: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\User.java:43:54: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Video.java:13:18: Parameter showInput should be final. [FinalParameters]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Video.java:20:5: Class 'Video' looks like designed for extension (can be subclassed), but the method 'getTitle' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Video' final or making the method 'getTitle' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Video.java:24:5: Class 'Video' looks like designed for extension (can be subclassed), but the method 'getYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Video' final or making the method 'getYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Video.java:28:5: Class 'Video' looks like designed for extension (can be subclassed), but the method 'getCast' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Video' final or making the method 'getCast' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\homework\Video.java:32:5: Class 'Video' looks like designed for extension (can be subclassed), but the method 'getGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Video' final or making the method 'getGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\main\Main.java:9:16: Using the '.*' form of import should be avoided - homework.*. [AvoidStarImport]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\main\Main.java:17:8: Unused import - java.util.HashMap. [UnusedImports]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\main\Main.java:18:8: Unused import - java.util.Map. [UnusedImports]
[ERROR] C:\Users\tudor\Desktop\An 2 Sem 1\POO\tema\.\src\main\Main.java:74: Line is longer than 100 characters (found 124). [LineLength]
Audit done.
Checkstyle ends with 81 errors.
